#Makefile_merge_template
#
#Makefile to merge BWASP *.Creport files for combined input into workflow step 5.
#Version: May 17, 2020

#Usage: make -j 4

################################################################################
#
#This makefile is a template for merging replicates.
#
#The assumption made in this template is that the replicate *.Creport files are
#either present in the replicate* directories or that they were stored in a *.zip
#archive as constructed by targets "cleanup finishup".  The mergeCreports.py script
#will look for a Creport file either as plaintext or within a zip archive in each
#replicate subfolder.

###
SYNONYM     = Pcan-Queen

################################################################################
### ! Typically there would be no need for further editing below this line ! ###

all:	$(SYNONYM).Creport $(SYNONYM).mstats

#############################################################

### 1. Merging the Creports of the distinct replicates:
#
#
$(SYNONYM).Creport:
	mergeCreports.py --outfile $(SYNONYM)


### 2. Creating the seperate contexts from the Creport using the Creport2CXreport.py script:
#
#
CXreports:	$(SYNONYM).CpGreport $(SYNONYM).CHGreport $(SYNONYM).CHHreport $(SYNONYM).HSMthresholds

%.CpGreport %.CHGreport %.CHHreport %.HSMthresholds:	%.Creport
	Creport2CXreport.py $*.Creport $*.CpGreport $*.CHGreport $*.CHHreport > $*.HSMthresholds


### 3. Generate and print methylation statistics.
#
#
$(SYNONYM).mstats:	$(SYNONYM).Creport \
		 	$(SYNONYM).CpGscd.mcalls $(SYNONYM).CpGhsm.mcalls $(SYNONYM).CpGnsm.mcalls \
			$(SYNONYM).CHGscd.mcalls $(SYNONYM).CHGhsm.mcalls $(SYNONYM).CHGnsm.mcalls \
			$(SYNONYM).CHHscd.mcalls $(SYNONYM).CHHhsm.mcalls $(SYNONYM).CHHnsm.mcalls
	mstats.sh $(SYNONYM) > $(SYNONYM).mstats

###Intermediate step: determine highly supported methylation sites using the CXreport2hsm.py script.
#
%.CpGscd.mcalls %.CpGhsm.mcalls %.CpGnsm.mcalls:	%.HSMthresholds %.CpGreport
	$(eval CpGnval = $(shell egrep "Thus.*CpG" $*.HSMthresholds | awk '{print $$NF}'))
	CXreport2hsm.py $*.CpGreport $(CpGnval) $*.CpGscd.mcalls $*.CpGhsm.mcalls $*.CpGnsm.mcalls

%.CHGscd.mcalls %.CHGhsm.mcalls %.CHGnsm.mcalls:	%.HSMthresholds %.CHGreport
	$(eval CHGnval = $(shell egrep "Thus.*CHG" $*.HSMthresholds | awk '{print $$NF}'))
	CXreport2hsm.py $*.CHGreport $(CHGnval) $*.CHGscd.mcalls $*.CHGhsm.mcalls $*.CHGnsm.mcalls

%.CHHscd.mcalls %.CHHhsm.mcalls %.CHHnsm.mcalls:	%.HSMthresholds %.CHHreport
	$(eval CHHnval = $(shell egrep "Thus.*CHH" $*.HSMthresholds | awk '{print $$NF}'))
	CXreport2hsm.py $*.CHHreport $(CHHnval) $*.CHHscd.mcalls $*.CHHhsm.mcalls $*.CHHnsm.mcalls



###Clean up the output directory:
#
cleanup:
	-\mkdir _SCRATCH

	-\mkdir STORE-$(SYNONYM)
	-\mv $(SYNONYM)*report STORE-$(SYNONYM)

###Finish up after cleanup:
#
finishup:
	-\rm -rf _SCRATCH
	zip -r STORE-$(SYNONYM) STORE-$(SYNONYM)
	-\rm -rf STORE-$(SYNONYM)
